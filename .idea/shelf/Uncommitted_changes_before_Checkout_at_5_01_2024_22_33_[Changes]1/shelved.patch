Index: src/main/java/com/Tobeto/RentaCar/service/concretes/CarManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\n\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Car;\nimport com.Tobeto.RentaCar.entities.Color;\nimport com.Tobeto.RentaCar.repositories.CarRepository;\nimport com.Tobeto.RentaCar.service.abstracts.CarService;\nimport com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Car.UpdateCarRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\n@AllArgsConstructor\npublic class CarManager implements CarService {\n    private final CarRepository carRepository;\n    private ModelMapperService mapperService;\n\n    @Override\n    public List<GetCarListResponse> getAll() {\n        List<Car> cars =  carRepository.findAll();\n        List<GetCarListResponse> getCarListResponses = cars.stream()\n                .map(car->this.mapperService.forResponse()\n                        .map(car, GetCarListResponse.class)).collect(Collectors.toList());\n        return getCarListResponses;\n    }\n\n    @Override\n    public GetCarResponse getById(int id) {\n\n        Car cars = carRepository.findById(id).orElseThrow();\n        GetCarResponse response = mapperService.forResponse().map(cars, GetCarResponse.class);\n        return response;\n    }\n\n    @Override\n    public void create (AddCarRequest addCarRequest) { // Automapping Yapıldı\n        addCarRequest.setPlate(addCarRequest.getPlate().replaceAll(\"\\\\s\", \"\"));\n        if (carRepository.existsByPlate(addCarRequest.getPlate()))\n                throw new RuntimeException(\"Plate registered in the system\");\n        Car car = mapperService.forRequest().map(addCarRequest, Car.class);\n        carRepository.save(car);\n/*        //Color color = new Color();\n        car.setKilometer(addCarRequest.getKilometer());\n        car.setYear(addCarRequest.getYear());\n        car.setDailyPrice(addCarRequest.getDailyPrice());\n        car.setPlate(addCarRequest.getPlate());\n        // colorId ve modelId yapılacak*/\n    }\n\n    @Override\n    public void update(UpdateCarRequest carRequest) {\n        Car car = mapperService.forRequest().map(carRequest, Car.class);\n        carRepository.save(car);\n\n    }\n\n\n    @Override\n    public void delete(int id) {\n        carRepository.deleteById(id);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/CarManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/CarManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/CarManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/CarManager.java	
@@ -1,8 +1,7 @@
 package com.Tobeto.RentaCar.service.concretes;
 
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Car;
-import com.Tobeto.RentaCar.entities.Color;
+import com.Tobeto.RentaCar.entities.concretes.Car;
 import com.Tobeto.RentaCar.repositories.CarRepository;
 import com.Tobeto.RentaCar.service.abstracts.CarService;
 import com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;
@@ -52,6 +51,11 @@
         car.setPlate(addCarRequest.getPlate());
         // colorId ve modelId yapılacak*/
     }
+     //ModelMapper modelmapper = new ModelMapper()
+    //modelMapper.getConfiguration().setAmbiguityIgnored(true)
+    //  .setMatchingStrategy(MatchingStrategies.STANDARD);
+    // Car car =modelMapper.map)request, Car.class)
+
 
     @Override
     public void update(UpdateCarRequest carRequest) {
@@ -65,4 +69,5 @@
     public void delete(int id) {
         carRepository.deleteById(id);
     }
+
 }
Index: src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/AddCarRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.request.Car;\nimport jakarta.validation.constraints.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AddCarRequest {\n    @PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int kilometer;\n    @Min(value = 2005, message = \"Year cannot be less than 2005\")\n    @Max(value = 2024, message = \"The year cannot be greater than 2024\")\n    private int year;\n    @PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private double dailyPrice;\n    @Pattern(regexp = \"^[0-9]{2} [A-Z]{1,3} [0-9]{2,5}$\", message = \"invalid format\")\n    @NotBlank\n    private String plate;\n\n    //@PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int colorId;\n    //@PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int modelId;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/AddCarRequest.java b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/AddCarRequest.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/AddCarRequest.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/AddCarRequest.java	
@@ -18,6 +18,8 @@
     @Pattern(regexp = "^[0-9]{2} [A-Z]{1,3} [0-9]{2,5}$", message = "invalid format")
     @NotBlank
     private String plate;
+     private short minFindeksRate;
+     private String imagePath;
 
     //@PositiveOrZero(message = "The annotated element must be a positive number or 0.")
     private int colorId;
Index: src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/UpdateCarRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.request.Car;\nimport jakarta.validation.constraints.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class UpdateCarRequest {\n    // id işlemi almalı\n    private int id;\n    @PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int kilometer;\n    @Min(value = 2005, message = \"Year cannot be less than 2005\")\n    @Max(value = 2024, message = \"The year cannot be greater than 2024\")\n    private int year;\n    @PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private double dailyPrice;\n    @Pattern(regexp = \"^[0-9]{2} [A-Z]{1,3} [0-9]{2,5}$\", message = \"invalid format\")\n    @NotBlank\n    private String plate;\n    //@PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int colorId;\n    //@PositiveOrZero(message = \"The annotated element must be a positive number or 0.\")\n    private int modelId;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/UpdateCarRequest.java b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/UpdateCarRequest.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/UpdateCarRequest.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Car/UpdateCarRequest.java	
@@ -20,6 +20,10 @@
     @Pattern(regexp = "^[0-9]{2} [A-Z]{1,3} [0-9]{2,5}$", message = "invalid format")
     @NotBlank
     private String plate;
+    private short minFindeksRate;
+
+    private String imagePath;
+
     //@PositiveOrZero(message = "The annotated element must be a positive number or 0.")
     private int colorId;
     //@PositiveOrZero(message = "The annotated element must be a positive number or 0.")
Index: src/main/java/com/Tobeto/RentaCar/controllers/CarController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.controllers;\n\nimport com.Tobeto.RentaCar.entities.Brand;\nimport com.Tobeto.RentaCar.entities.Car;\nimport com.Tobeto.RentaCar.service.abstracts.BrandService;\nimport com.Tobeto.RentaCar.service.abstracts.CarService;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Car.UpdateCarRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;\nimport jakarta.validation.Valid;\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"api/cars\")\n@AllArgsConstructor\npublic class CarController {\n\n    private final CarService carService;\n\n    @GetMapping\n    public List<GetCarListResponse> getAll() {\n        return carService.getAll();\n    }\n\n    @GetMapping(\"{id}\")\n    public GetCarResponse getById(@PathVariable int id) {\n        return carService.getById(id);\n    }\n\n    @PostMapping(\"/create\")\n    public void create (@RequestBody @Valid AddCarRequest addCarRequest) {\n        carService.create(addCarRequest);\n    }\n    @PutMapping(\"/update\")\n    public void update(@RequestBody  @Valid UpdateCarRequest updateCarRequest){\n        carService.update(updateCarRequest);\n    }\n    @DeleteMapping(\"{id}\")\n    public void delete(@PathVariable int id){\n        carService.delete(id);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/controllers/CarController.java b/src/main/java/com/Tobeto/RentaCar/controllers/CarController.java
--- a/src/main/java/com/Tobeto/RentaCar/controllers/CarController.java	
+++ b/src/main/java/com/Tobeto/RentaCar/controllers/CarController.java	
@@ -1,14 +1,8 @@
 package com.Tobeto.RentaCar.controllers;
 
-import com.Tobeto.RentaCar.entities.Brand;
-import com.Tobeto.RentaCar.entities.Car;
-import com.Tobeto.RentaCar.service.abstracts.BrandService;
 import com.Tobeto.RentaCar.service.abstracts.CarService;
-import com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;
-import com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;
 import com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;
 import com.Tobeto.RentaCar.service.dto.request.Car.UpdateCarRequest;
-import com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;
 import com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;
 import com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;
 import jakarta.validation.Valid;
Index: src/main/java/com/Tobeto/RentaCar/repositories/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface UserRepository extends JpaRepository<User, Integer> {\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/UserRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/UserRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/UserRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/UserRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.User;
+import com.Tobeto.RentaCar.entities.concretes.User;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface UserRepository extends JpaRepository<User, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/entities/Customer.java
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/Customer.java b/src/main/java/com/Tobeto/RentaCar/entities/Customer.java
deleted file mode 100644
--- a/src/main/java/com/Tobeto/RentaCar/entities/Customer.java	
+++ /dev/null	
@@ -1,33 +0,0 @@
-package com.Tobeto.RentaCar.entities;
-import jakarta.persistence.*;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.util.List;
-
-@Entity
-@Table(name = "customers")
-@Data
-@AllArgsConstructor
-@NoArgsConstructor
-public class Customer {
-    @Id
-    @Column(name = "id")
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private int id;
-
-
-    @Column(name = "nationality_id")
-    private String nationalityId;
-
-
-    // foreignkey
-    @ManyToOne
-    @JoinColumn(name = "user_id")
-    private User user;
-
-    @OneToMany(mappedBy = "customer")
-    private List<Rental> rentals;
-
-}
Index: src/main/java/com/Tobeto/RentaCar/entities/User.java
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/User.java b/src/main/java/com/Tobeto/RentaCar/entities/User.java
deleted file mode 100644
--- a/src/main/java/com/Tobeto/RentaCar/entities/User.java	
+++ /dev/null	
@@ -1,33 +0,0 @@
-package com.Tobeto.RentaCar.entities;
-import jakarta.persistence.*;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.time.LocalDate;
-import java.util.List;
-
-@Entity
-@Table(name = "users")
-@Data
-@AllArgsConstructor
-@NoArgsConstructor
-public class User {
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private int id;
-    @Column(name = "name",length = 30, nullable = false)
-    private String name;
-    @Column(name ="surname",length = 30, nullable = false)
-    private String surname;
-    @Column(name = "gsm",length = 30, nullable = true)
-    private String gsm;
-    @Column(name = "email",length = 50, nullable = true)
-    private String email;
-
-    @OneToMany(mappedBy = "user")
-    private List<Customer> customers;
-
-    @OneToMany(mappedBy = "user")
-    private List<Employee> employees;
-}
Index: src/main/java/com/Tobeto/RentaCar/service/concretes/BrandManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\n\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Brand;\nimport com.Tobeto.RentaCar.entities.Car;\nimport com.Tobeto.RentaCar.entities.Model;\nimport com.Tobeto.RentaCar.repositories.BrandRepository;\nimport com.Tobeto.RentaCar.service.abstracts.BrandService;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Model.GetModelListResponse;\nimport lombok.AllArgsConstructor;\nimport lombok.NoArgsConstructor;\nimport org.modelmapper.ModelMapper;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@AllArgsConstructor\n@Service\npublic class BrandManager implements BrandService {\n\n    private final BrandRepository brandRepository;\n    private  ModelMapperService mapperService;\n    @Override\n    public void create (AddBrandRequest addBrandRequest) {\n\n        if (brandRepository.existsByName(addBrandRequest.getName().trim()))\n            throw new RuntimeException(\"brand is available in the system\");\n        // Auto mapping işlemi yapıldı\n        Brand brand = this.mapperService.forRequest().map(addBrandRequest, Brand.class);\n        this.brandRepository.save(brand);\n    }\n    @Override\n    public GetBrandResponse getById(int id) {\n        return null;\n    }\n\n    @Override // get list eklenecek\n    public List<GetBrandListResponse> getAll() {\n        List<Brand> brands=  brandRepository.findAll();\n        List<GetBrandListResponse> getBrandListResponses = brands.stream()\n                .map(brand->this.mapperService.forResponse()\n                        .map(brand, GetBrandListResponse.class)).collect(Collectors.toList());\n        return getBrandListResponses;\n    }\n\n    @Override\n    public void update(UpdateBrandRequest updateBrandRequest) {\n        Brand brand = mapperService.forRequest().map(updateBrandRequest, Brand.class);\n        brandRepository.save(brand);\n\n    }\n\n\n    @Override\n    public void delete(int id) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/BrandManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/BrandManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/BrandManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/BrandManager.java	
@@ -1,19 +1,14 @@
 package com.Tobeto.RentaCar.service.concretes;
 
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Brand;
-import com.Tobeto.RentaCar.entities.Car;
-import com.Tobeto.RentaCar.entities.Model;
+import com.Tobeto.RentaCar.entities.concretes.Brand;
 import com.Tobeto.RentaCar.repositories.BrandRepository;
 import com.Tobeto.RentaCar.service.abstracts.BrandService;
 import com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;
 import com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;
 import com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandListResponse;
 import com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;
-import com.Tobeto.RentaCar.service.dto.response.Model.GetModelListResponse;
 import lombok.AllArgsConstructor;
-import lombok.NoArgsConstructor;
-import org.modelmapper.ModelMapper;
 import org.springframework.stereotype.Service;
 
 import java.util.List;
Index: src/main/java/com/Tobeto/RentaCar/controllers/BrandController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.controllers;\n\nimport com.Tobeto.RentaCar.entities.Brand;\nimport com.Tobeto.RentaCar.service.abstracts.BrandService;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;\nimport jakarta.validation.Valid;\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"api/brands\")\n@AllArgsConstructor\npublic class BrandController {\n\n    private final BrandService brandService;\n\n    @GetMapping\n    public List<GetBrandListResponse> getAll() {\n        return this.brandService.getAll();\n    }\n    @GetMapping(\"{id}\")\n    public GetBrandResponse getById(@PathVariable int id){\n        return this.brandService.getById(id);\n    }\n    @PostMapping(\"/create\")\n    public void create (@RequestBody @Valid AddBrandRequest addBrandRequest){\n        this.brandService.create(addBrandRequest);\n    }\n    @PutMapping(\"/update\")\n    public void update(@RequestBody  @Valid UpdateBrandRequest updateBrandRequest){\n        this.brandService.update(updateBrandRequest);\n    }\n    @DeleteMapping(\"{id}\")\n    public void delete(@PathVariable int id){\n        this.brandService.delete(id);\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/controllers/BrandController.java b/src/main/java/com/Tobeto/RentaCar/controllers/BrandController.java
--- a/src/main/java/com/Tobeto/RentaCar/controllers/BrandController.java	
+++ b/src/main/java/com/Tobeto/RentaCar/controllers/BrandController.java	
@@ -1,6 +1,5 @@
 package com.Tobeto.RentaCar.controllers;
 
-import com.Tobeto.RentaCar.entities.Brand;
 import com.Tobeto.RentaCar.service.abstracts.BrandService;
 import com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;
 import com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
new file mode 100644
--- /dev/null	
+++ b/package.json	
@@ -0,0 +1,16 @@
+{
+  "name": "tobeto-rentacar_pair1",
+
+  "description": "## Proje Ortakları Ahmet Kaya Büşra Yüksekel Zeynep Sevinç Burak Karlıdağ",
+  "main": "index.js",
+  "scripts": {
+    "start": "node Tobeto-RentAcar_Pair1"
+  },
+  "keywords": [],
+  "author": "",
+  "license": "ISC",
+  "engines": {
+    "node": ">=21.4.0"
+  }
+
+}
Index: src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.response.Brand;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class GetBrandResponse {\n    private String name;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandResponse.java b/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandResponse.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandResponse.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandResponse.java	
@@ -9,4 +9,5 @@
 @NoArgsConstructor
 public class GetBrandResponse {
     private String name;
+    private String logoPath;
 }
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
--- /dev/null	
+++ b/package-lock.json	
@@ -0,0 +1,13 @@
+{
+  "name": "tobeto-rentacar_pair1",
+  "version": "1.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "tobeto-rentacar_pair1",
+      "version": "1.0.0",
+      "license": "ISC"
+    }
+  }
+}
Index: src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.response.Brand;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class GetBrandListResponse {\n    private String name;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandListResponse.java b/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandListResponse.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandListResponse.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/response/Brand/GetBrandListResponse.java	
@@ -9,5 +9,6 @@
 @NoArgsConstructor
 public class GetBrandListResponse {
     private String name;
+    private String logoPath;
 
 }
Index: src/main/java/com/Tobeto/RentaCar/service/abstracts/CarService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.abstracts;\n\nimport com.Tobeto.RentaCar.entities.Car;\nimport com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Car.UpdateCarRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;\n\nimport java.util.List;\n\npublic interface CarService {\n    List<GetCarListResponse> getAll();\n    GetCarResponse getById(int id);\n    void create (AddCarRequest addCarRequest);\n    void update(UpdateCarRequest carRequest);\n    void delete(int id);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/abstracts/CarService.java b/src/main/java/com/Tobeto/RentaCar/service/abstracts/CarService.java
--- a/src/main/java/com/Tobeto/RentaCar/service/abstracts/CarService.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/abstracts/CarService.java	
@@ -1,6 +1,5 @@
 package com.Tobeto.RentaCar.service.abstracts;
 
-import com.Tobeto.RentaCar.entities.Car;
 import com.Tobeto.RentaCar.service.dto.request.Car.AddCarRequest;
 import com.Tobeto.RentaCar.service.dto.request.Car.UpdateCarRequest;
 import com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;
Index: src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/AddBrandRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.request.Brand;\n\nimport jakarta.validation.constraints.NotBlank;\nimport jakarta.validation.constraints.Size;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AddBrandRequest {\n    @Size(min = 2, max = 30, message = \"Minimum 2 and maximum 30 characters can be entered\")\n    @NotBlank(message = \"This field cannot be left blank\")\n    private String name;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/AddBrandRequest.java b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/AddBrandRequest.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/AddBrandRequest.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/AddBrandRequest.java	
@@ -13,4 +13,5 @@
     @Size(min = 2, max = 30, message = "Minimum 2 and maximum 30 characters can be entered")
     @NotBlank(message = "This field cannot be left blank")
     private String name;
+    private String logoPath;
 }
Index: src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/UpdateBrandRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.request.Brand;\n\nimport jakarta.validation.constraints.NotBlank;\nimport jakarta.validation.constraints.Size;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class UpdateBrandRequest {\n    @Size(min = 2, max = 30, message = \"Minimum 2 and maximum 30 characters can be entered\")\n    @NotBlank(message = \"This field cannot be left blank\")\n    private String name;\n    private int id;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/UpdateBrandRequest.java b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/UpdateBrandRequest.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/UpdateBrandRequest.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Brand/UpdateBrandRequest.java	
@@ -14,4 +14,5 @@
     @NotBlank(message = "This field cannot be left blank")
     private String name;
     private int id;
+    private String logoPath;
 }
Index: src/main/java/com/Tobeto/RentaCar/service/concretes/ColorManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\n\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Car;\nimport com.Tobeto.RentaCar.entities.Color;\nimport com.Tobeto.RentaCar.repositories.ColorRepository;\nimport com.Tobeto.RentaCar.service.abstracts.ColorService;\nimport com.Tobeto.RentaCar.service.dto.request.Color.AddColorRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Color.UpdateColorRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Color.GetColorListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Color.GetColorResponse;\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n@Service\n@AllArgsConstructor\npublic class ColorManager implements ColorService {\n    private final ColorRepository colorRepository;\n    private  ModelMapperService mapperService;\n\n    @Override\n    public List<GetColorListResponse> getAll() {\n        List<Color> colors =  colorRepository.findAll();\n        List<GetColorListResponse> getColorListResponses = colors.stream()\n                .map(color->this.mapperService.forResponse()\n                        .map(color, GetColorListResponse.class)).collect(Collectors.toList());\n        return getColorListResponses;\n    }\n\n    @Override\n    public GetColorResponse getById(int id) {\n        Color colors = colorRepository.findById(id).orElseThrow();\n        GetColorResponse response = mapperService.forResponse().map(colors, GetColorResponse.class);\n        return response;\n    }\n\n    @Override\n    public void create (AddColorRequest addColorRequest) {\n        if (colorRepository.existsByName(addColorRequest.getName()))\n            throw new RuntimeException(\"Color available in the system\");\n        Color colors = mapperService.forRequest().map(addColorRequest, Color.class);\n        colorRepository.save(colors);\n    }\n\n    @Override\n    public void update(UpdateColorRequest colorRequest) {\n        Color colors = mapperService.forRequest().map(colorRequest, Color.class);\n        colorRepository.save(colors);\n    }\n\n    @Override\n    public void delete(int id) {\n        colorRepository.deleteById(id);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/ColorManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/ColorManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/ColorManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/ColorManager.java	
@@ -1,14 +1,11 @@
 package com.Tobeto.RentaCar.service.concretes;
 
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Car;
-import com.Tobeto.RentaCar.entities.Color;
+import com.Tobeto.RentaCar.entities.concretes.Color;
 import com.Tobeto.RentaCar.repositories.ColorRepository;
 import com.Tobeto.RentaCar.service.abstracts.ColorService;
 import com.Tobeto.RentaCar.service.dto.request.Color.AddColorRequest;
 import com.Tobeto.RentaCar.service.dto.request.Color.UpdateColorRequest;
-import com.Tobeto.RentaCar.service.dto.response.Car.GetCarListResponse;
-import com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;
 import com.Tobeto.RentaCar.service.dto.response.Color.GetColorListResponse;
 import com.Tobeto.RentaCar.service.dto.response.Color.GetColorResponse;
 import lombok.AllArgsConstructor;
Index: src/main/java/com/Tobeto/RentaCar/service/concretes/ModelManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Model;\nimport com.Tobeto.RentaCar.repositories.ModelRepository;\nimport com.Tobeto.RentaCar.service.abstracts.ModelService;\nimport com.Tobeto.RentaCar.service.dto.request.Model.AddModelRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Model.UpdateModelRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Model.GetModelListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Model.GetModelResponse;\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n@Service\n@AllArgsConstructor\npublic class ModelManager implements ModelService {\n    private final ModelRepository modelRepository;\n    private ModelMapperService mapperService;\n\n    @Override\n    public List<GetModelListResponse> getAll() {\n        List<Model> model =  modelRepository.findAll();\n        List<GetModelListResponse> getModelListResponses = model.stream()\n                .map(color->this.mapperService.forResponse()\n                        .map(color, GetModelListResponse.class)).collect(Collectors.toList());\n        return getModelListResponses;\n    }\n    @Override\n    public GetModelResponse getById(int id) {\n        Model model = modelRepository.findById(id).orElseThrow();\n        GetModelResponse response = mapperService.forResponse().map(model, GetModelResponse.class);\n        return response;\n    }\n\n    @Override\n    public void create (AddModelRequest addModelRequest) {\n        if (modelRepository.existsByName(addModelRequest.getName()))\n            throw new RuntimeException(\"Model available in the system\");\n\n        Model model = mapperService.forRequest().map(addModelRequest, Model.class);\n        modelRepository.save(model);\n\n    }\n\n    @Override\n    public void update(UpdateModelRequest modelRequest) {\n            Model model = mapperService.forRequest().map(modelRequest, Model.class);\n            modelRepository.save(model);\n    }\n    @Override\n    public void delete(int id) {\n        modelRepository.deleteById(id);\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/ModelManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/ModelManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/ModelManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/ModelManager.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.service.concretes;
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Model;
+import com.Tobeto.RentaCar.entities.concretes.Model;
 import com.Tobeto.RentaCar.repositories.ModelRepository;
 import com.Tobeto.RentaCar.service.abstracts.ModelService;
 import com.Tobeto.RentaCar.service.dto.request.Model.AddModelRequest;
Index: src/main/java/com/Tobeto/RentaCar/service/concretes/UserManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\n\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Rental;\nimport com.Tobeto.RentaCar.entities.User;\nimport com.Tobeto.RentaCar.repositories.UserRepository;\nimport com.Tobeto.RentaCar.service.abstracts.UserService;\nimport com.Tobeto.RentaCar.service.dto.request.Rental.AddRentalRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Rental.UpdateRentalRequest;\nimport com.Tobeto.RentaCar.service.dto.request.User.AddUserRequest;\nimport com.Tobeto.RentaCar.service.dto.request.User.UpdateUserRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalResponse;\nimport com.Tobeto.RentaCar.service.dto.response.User.GetUserListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.User.GetUserResponse;\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\n@AllArgsConstructor\npublic class UserManager implements UserService {\n\n    private final UserRepository userRepository;\n    private final ModelMapperService mapperService;\n    @Override\n    public List<GetUserListResponse> getAll() {\n        List<User> users =  userRepository.findAll();\n        List<GetUserListResponse> getUserListResponses = users.stream()\n                .map(user->this.mapperService.forResponse()\n                        .map(user, GetUserListResponse.class)).collect(Collectors.toList());\n        return getUserListResponses;\n    }\n\n    @Override\n    public GetUserResponse getById(int id) {\n        User user = userRepository.findById(id).orElseThrow();\n        GetUserResponse response = mapperService.forResponse().map(user, GetUserResponse.class);\n        return response;\n    }\n\n    @Override\n    public void create(AddUserRequest userRequest) {\n        //if (rentalRequest.getStartDate().plusDays(25).isBefore(rentalRequest.getEndDate())) {\n          //  throw new RuntimeException(\"The car can be rented for a maximum of 25 days.\");\n        //}\n        User user = mapperService.forRequest().map(userRequest, User.class);\n        userRepository.save(user);\n    }\n\n    @Override\n    public void update(UpdateUserRequest userRequest) {\n        User user = mapperService.forRequest().map(userRequest, User.class);\n        userRepository.save(user);\n    }\n\n    @Override\n    public void delete(int id) {\n        userRepository.deleteById(id);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/UserManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/UserManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/UserManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/UserManager.java	
@@ -1,16 +1,11 @@
 package com.Tobeto.RentaCar.service.concretes;
 
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Rental;
-import com.Tobeto.RentaCar.entities.User;
+import com.Tobeto.RentaCar.entities.concretes.User;
 import com.Tobeto.RentaCar.repositories.UserRepository;
 import com.Tobeto.RentaCar.service.abstracts.UserService;
-import com.Tobeto.RentaCar.service.dto.request.Rental.AddRentalRequest;
-import com.Tobeto.RentaCar.service.dto.request.Rental.UpdateRentalRequest;
 import com.Tobeto.RentaCar.service.dto.request.User.AddUserRequest;
 import com.Tobeto.RentaCar.service.dto.request.User.UpdateUserRequest;
-import com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalListResponse;
-import com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalResponse;
 import com.Tobeto.RentaCar.service.dto.response.User.GetUserListResponse;
 import com.Tobeto.RentaCar.service.dto.response.User.GetUserResponse;
 import lombok.AllArgsConstructor;
Index: src/main/java/com/Tobeto/RentaCar/entities/concretes/CorporateCustomer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/concretes/CorporateCustomer.java b/src/main/java/com/Tobeto/RentaCar/entities/concretes/CorporateCustomer.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/Tobeto/RentaCar/entities/concretes/CorporateCustomer.java	
@@ -0,0 +1,27 @@
+package com.Tobeto.RentaCar.entities.concretes;
+
+import com.Tobeto.RentaCar.entities.abstracts.BaseEntity;
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Table(name = "corporate_customers")
+@Entity
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class CorporateCustomer extends BaseEntity {
+
+    @Column(name="company_name")
+    private String companyName;
+    @Column(name="tax_no")
+    private String taxNo;
+
+    @ManyToOne
+    @JoinColumn(name = "user_id")
+    private User user;
+}
+
+
+
Index: src/main/java/com/Tobeto/RentaCar/entities/concretes/Invoice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/concretes/Invoice.java b/src/main/java/com/Tobeto/RentaCar/entities/concretes/Invoice.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/Tobeto/RentaCar/entities/concretes/Invoice.java	
@@ -0,0 +1,26 @@
+package com.Tobeto.RentaCar.entities.concretes;
+
+import com.Tobeto.RentaCar.entities.abstracts.BaseEntity;
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Entity
+@Table(name = "invoices")
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class Invoice extends BaseEntity {
+    @Column(name = "invoice_no")
+    private String invoiceNo;
+    @Column(name = "discount_rate",length =10)
+    private Float discountRate;
+    @Column(name = "tax_rate")
+    private Float taxRate;
+
+    @ManyToOne
+    @JoinColumn(name = "rental_id")
+    private Rental rental;
+
+}
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url=jdbc:postgresql://localhost:5433/rentacars\nspring.datasource.username=postgres\nspring.datasource.password=1234\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\nspring.jpa.hibernate.ddl-auto=validate\nspring.jpa.properties.javax.persistence.validation.mode=auto\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	
+++ b/src/main/resources/application.properties	
@@ -1,7 +1,7 @@
-spring.datasource.url=jdbc:postgresql://localhost:5433/rentacars
+spring.datasource.url=jdbc:postgresql://localhost:5432/rentacars
 spring.datasource.username=postgres
-spring.datasource.password=1234
+spring.datasource.password=12345
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
-spring.jpa.hibernate.ddl-auto=validate
+spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.javax.persistence.validation.mode=auto
 
Index: src/main/java/com/Tobeto/RentaCar/entities/concretes/Customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/concretes/Customer.java b/src/main/java/com/Tobeto/RentaCar/entities/concretes/Customer.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/Tobeto/RentaCar/entities/concretes/Customer.java	
@@ -0,0 +1,28 @@
+package com.Tobeto.RentaCar.entities.concretes;
+import com.Tobeto.RentaCar.entities.abstracts.BaseEntity;
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.util.List;
+
+@Entity
+@Table(name = "customers")
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class Customer extends BaseEntity {
+
+    @Column(name = "first_name",length = 30, nullable = false)
+    private String firstName;
+    @Column(name = "last_name",length = 30, nullable = false)
+    private String lastName;
+
+    // foreignkey
+    @ManyToOne
+    @JoinColumn(name = "user_id")
+    private User user;
+
+
+}
Index: src/main/java/com/Tobeto/RentaCar/repositories/RentalRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Rental;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\n\nimport java.util.List;\n\npublic interface RentalRepository extends JpaRepository<Rental, Integer> {\n// kullanım dışı örnek\n//    @Query(\"SELECT c.kilometer FROM Car c \" +\n//            \"WHERE c.id = :carId\")\n//    public int getRentKilometer(int carId);\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/RentalRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/RentalRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/RentalRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/RentalRepository.java	
@@ -1,11 +1,7 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Rental;
+import com.Tobeto.RentaCar.entities.concretes.Rental;
 import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.data.jpa.repository.Query;
-import org.springframework.data.repository.query.Param;
-
-import java.util.List;
 
 public interface RentalRepository extends JpaRepository<Rental, Integer> {
 // kullanım dışı örnek
Index: src/main/java/com/Tobeto/RentaCar/entities/concretes/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/concretes/User.java b/src/main/java/com/Tobeto/RentaCar/entities/concretes/User.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/Tobeto/RentaCar/entities/concretes/User.java	
@@ -0,0 +1,31 @@
+package com.Tobeto.RentaCar.entities.concretes;
+import com.Tobeto.RentaCar.entities.abstracts.BaseEntity;
+import com.Tobeto.RentaCar.entities.concretes.Customer;
+import com.Tobeto.RentaCar.entities.concretes.Employee;
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.util.List;
+
+@Entity
+@Table(name = "users")
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class User extends BaseEntity {
+
+
+    @Column(name = "email",length = 50, nullable = true)
+    private String email;
+    @Column(name = "password")
+    private String password;
+
+    @OneToMany(mappedBy = "user")
+    private List<Customer> customers;
+
+    @OneToMany(mappedBy = "user")
+    private List<CorporateCustomer> corporateCustomers;
+
+}
Index: src/main/java/com/Tobeto/RentaCar/service/concretes/RentalManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.concretes;\n\nimport com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;\nimport com.Tobeto.RentaCar.entities.Rental;\nimport com.Tobeto.RentaCar.repositories.RentalRepository;\nimport com.Tobeto.RentaCar.service.abstracts.CarService;\nimport com.Tobeto.RentaCar.service.abstracts.RentalService;\nimport com.Tobeto.RentaCar.service.dto.request.Rental.AddRentalRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Rental.UpdateRentalRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Car.GetCarResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalResponse;\nimport lombok.AllArgsConstructor;\nimport lombok.NoArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.time.LocalDate;\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport java.time.temporal.ChronoUnit;\n\n@Service\n@AllArgsConstructor\npublic class RentalManager implements RentalService {\n    private final RentalRepository rentalRepository;\n    private ModelMapperService mapperService;\n    private final CarService carService;\n\n\n    @Override\n    public List<GetRentalListResponse> getAll() {\n        List<Rental> rentals =  rentalRepository.findAll();\n        List<GetRentalListResponse> getRentalListResponses = rentals.stream()\n                .map(rental->this.mapperService.forResponse()\n                        .map(rental, GetRentalListResponse.class)).collect(Collectors.toList());\n        return getRentalListResponses;\n    }\n\n    @Override\n    public GetRentalResponse getById(int id) {\n        Rental rental = rentalRepository.findById(id).orElseThrow();\n        GetRentalResponse response = mapperService.forResponse().map(rental, GetRentalResponse.class);\n        return response;\n    }\n\n    @Override\n    public void create (AddRentalRequest rentalRequest) {\n        // business rule\n        if (rentalRequest.getStartDate().isBefore(LocalDate.now())) {\n            throw new RuntimeException(\"The start date cannot be a date earlier than today.\");\n        }\n        if (rentalRequest.getEndDate().isBefore(rentalRequest.getStartDate())) {\n            throw new RuntimeException(\"The end date cannot be a date earlier than the start date.\");\n        }\n        if (rentalRequest.getStartDate().plusDays(25).isBefore(rentalRequest.getEndDate())) {\n            throw new RuntimeException(\"The car can be rented for a maximum of 25 days.\");\n        }\n        // dikkat düzeltilecek\n        rentalRequest.setEndKilometer(0);\n\n        GetCarResponse carResponse = carService.getById(rentalRequest.getCarID());\n        rentalRequest.setStartKilometer(carResponse.getKilometer());\n        Rental rental = mapperService.forRequest().map(rentalRequest, Rental.class);\n        rental.setTotalPrice(rentalRequest.getStartDate().until(rentalRequest.getEndDate(), ChronoUnit.DAYS)\n                * carResponse.getDailyPrice() * (1.0 - rentalRequest.getDiscount() / 100));\n        rentalRepository.save(rental);\n    }\n\n    @Override\n    public void update(UpdateRentalRequest rentalRequest) {\n        Rental rental = mapperService.forRequest().map(rentalRequest, Rental.class);\n        rentalRepository.save(rental);\n    }\n\n    @Override\n    public void delete(int id) {\n        rentalRepository.deleteById(id);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/concretes/RentalManager.java b/src/main/java/com/Tobeto/RentaCar/service/concretes/RentalManager.java
--- a/src/main/java/com/Tobeto/RentaCar/service/concretes/RentalManager.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/concretes/RentalManager.java	
@@ -1,7 +1,7 @@
 package com.Tobeto.RentaCar.service.concretes;
 
 import com.Tobeto.RentaCar.core.utilites.mappers.ModelMapperService;
-import com.Tobeto.RentaCar.entities.Rental;
+import com.Tobeto.RentaCar.entities.concretes.Rental;
 import com.Tobeto.RentaCar.repositories.RentalRepository;
 import com.Tobeto.RentaCar.service.abstracts.CarService;
 import com.Tobeto.RentaCar.service.abstracts.RentalService;
@@ -11,7 +11,6 @@
 import com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalListResponse;
 import com.Tobeto.RentaCar.service.dto.response.Rental.GetRentalResponse;
 import lombok.AllArgsConstructor;
-import lombok.NoArgsConstructor;
 import org.springframework.stereotype.Service;
 
 import java.time.LocalDate;
Index: src/main/java/com/Tobeto/RentaCar/entities/abstracts/BaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/entities/abstracts/BaseEntity.java b/src/main/java/com/Tobeto/RentaCar/entities/abstracts/BaseEntity.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/Tobeto/RentaCar/entities/abstracts/BaseEntity.java	
@@ -0,0 +1,33 @@
+package com.Tobeto.RentaCar.entities.abstracts;
+
+import jakarta.persistence.*;
+import lombok.Data;
+import lombok.Generated;
+
+import java.time.LocalDate;
+
+@MappedSuperclass
+@Data
+public abstract class BaseEntity {
+
+    @Id
+    @Column(name = "id")
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+
+    private int id;
+    @Column(name = "created_date")
+    private LocalDate createdDate;
+
+    @Column(name = "updated_date", nullable = true)
+    private LocalDate updatedDate;
+
+    @PrePersist
+    private void beforeAdd() {
+        createdDate = LocalDate.now();
+    }
+
+    @PreUpdate
+    private void beforeUpdate() {
+        updatedDate = LocalDate.now();
+    }
+}
Index: src/main/java/com/Tobeto/RentaCar/service/abstracts/BrandService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.abstracts;\n\nimport com.Tobeto.RentaCar.entities.Brand;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;\n\nimport java.util.List;\n\npublic interface BrandService {\n    void create (AddBrandRequest addBrandRequest);\n    GetBrandResponse getById(int id);\n    List<GetBrandListResponse> getAll();\n    void update(UpdateBrandRequest updateBrandRequest);\n    void delete(int id);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/abstracts/BrandService.java b/src/main/java/com/Tobeto/RentaCar/service/abstracts/BrandService.java
--- a/src/main/java/com/Tobeto/RentaCar/service/abstracts/BrandService.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/abstracts/BrandService.java	
@@ -1,6 +1,5 @@
 package com.Tobeto.RentaCar.service.abstracts;
 
-import com.Tobeto.RentaCar.entities.Brand;
 import com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;
 import com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;
 import com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandListResponse;
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.2.0</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.Tobeto</groupId>\n\t<artifactId>RentaCar</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>RentaCar</name>\n\t<description>Demo project for Spring Boot</description>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t</properties>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId >org.springdoc</groupId>\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n\t\t\t<version>2.0.2</version>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.postgresql</groupId>\n\t\t\t<artifactId>postgresql</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t\t<version>3.1.5</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains</groupId>\n\t\t\t<artifactId>annotations</artifactId>\n\t\t\t<version>RELEASE</version>\n\t\t\t<scope>compile</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.mockito</groupId>\n\t\t\t<artifactId>mockito-core</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.modelmapper</groupId>\n\t\t\t<artifactId>modelmapper</artifactId>\n\t\t\t<version>3.2.0</version>\n\t\t</dependency>\n\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<excludes>\n\t\t\t\t\t\t<exclude>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t</exclude>\n\t\t\t\t\t</excludes>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -45,18 +45,15 @@
 			<artifactId>spring-boot-starter-test</artifactId>
 			<scope>test</scope>
 		</dependency>
-
 		<dependency>
 			<groupId >org.springdoc</groupId>
 			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
 			<version>2.0.2</version>
 		</dependency>
-
 		<dependency>
 			<groupId>org.postgresql</groupId>
 			<artifactId>postgresql</artifactId>
 		</dependency>
-
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-data-jpa</artifactId>
Index: src/main/java/com/Tobeto/RentaCar/controllers/ModelController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.controllers;\n\nimport com.Tobeto.RentaCar.entities.Model;\nimport com.Tobeto.RentaCar.service.abstracts.ModelService;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Model.AddModelRequest;\nimport com.Tobeto.RentaCar.service.dto.request.Model.UpdateModelRequest;\nimport com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Model.GetModelListResponse;\nimport com.Tobeto.RentaCar.service.dto.response.Model.GetModelResponse;\nimport jakarta.validation.Valid;\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n@RestController\n@RequestMapping(\"api/models\")\n@AllArgsConstructor\n\npublic class ModelController {\n    private final ModelService modelService;\n    @GetMapping\n    public List<GetModelListResponse> getAll() {\n        return this.modelService.getAll();\n    }\n    @GetMapping(\"{id}\")\n    public GetModelResponse getById(@PathVariable int id){\n        return this.modelService.getById(id);\n    }\n    @PostMapping(\"/create\")\n    public void create (@RequestBody @Valid AddModelRequest addModelRequest){\n        this.modelService.create(addModelRequest);\n    }\n    @PutMapping(\"/update\")\n    public void update(@RequestBody  @Valid UpdateModelRequest updateModelRequest){\n        this.modelService.update(updateModelRequest);\n    }\n    @DeleteMapping(\"{id}\")\n    public void delete(@PathVariable int id){\n        this.modelService.delete(id);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/controllers/ModelController.java b/src/main/java/com/Tobeto/RentaCar/controllers/ModelController.java
--- a/src/main/java/com/Tobeto/RentaCar/controllers/ModelController.java	
+++ b/src/main/java/com/Tobeto/RentaCar/controllers/ModelController.java	
@@ -1,12 +1,8 @@
 package com.Tobeto.RentaCar.controllers;
 
-import com.Tobeto.RentaCar.entities.Model;
 import com.Tobeto.RentaCar.service.abstracts.ModelService;
-import com.Tobeto.RentaCar.service.dto.request.Brand.AddBrandRequest;
-import com.Tobeto.RentaCar.service.dto.request.Brand.UpdateBrandRequest;
 import com.Tobeto.RentaCar.service.dto.request.Model.AddModelRequest;
 import com.Tobeto.RentaCar.service.dto.request.Model.UpdateModelRequest;
-import com.Tobeto.RentaCar.service.dto.response.Brand.GetBrandResponse;
 import com.Tobeto.RentaCar.service.dto.response.Model.GetModelListResponse;
 import com.Tobeto.RentaCar.service.dto.response.Model.GetModelResponse;
 import jakarta.validation.Valid;
Index: src/main/java/com/Tobeto/RentaCar/service/dto/request/Model/AddModelRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.service.dto.request.Model;\nimport com.Tobeto.RentaCar.entities.Brand;\nimport jakarta.validation.constraints.NotBlank;\nimport jakarta.validation.constraints.Size;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AddModelRequest {\n    @Size(min = 2, max = 30, message = \"Minimum 2 characters can be entered\")\n    @NotBlank(message = \"This field cannot be left blank\")\n    private String name;\n    private int brandId;\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Model/AddModelRequest.java b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Model/AddModelRequest.java
--- a/src/main/java/com/Tobeto/RentaCar/service/dto/request/Model/AddModelRequest.java	
+++ b/src/main/java/com/Tobeto/RentaCar/service/dto/request/Model/AddModelRequest.java	
@@ -1,5 +1,4 @@
 package com.Tobeto.RentaCar.service.dto.request.Model;
-import com.Tobeto.RentaCar.entities.Brand;
 import jakarta.validation.constraints.NotBlank;
 import jakarta.validation.constraints.Size;
 import lombok.AllArgsConstructor;
Index: src/main/java/com/Tobeto/RentaCar/repositories/ColorRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Color;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ColorRepository extends JpaRepository<Color, Integer> {\n    boolean existsByName (String name);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/ColorRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/ColorRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/ColorRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/ColorRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Color;
+import com.Tobeto.RentaCar.entities.concretes.Color;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface ColorRepository extends JpaRepository<Color, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/repositories/CustomerRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Customer;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface CustomerRepository extends JpaRepository<Customer, Integer> {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/CustomerRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/CustomerRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/CustomerRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/CustomerRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Customer;
+import com.Tobeto.RentaCar.entities.concretes.Customer;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface CustomerRepository extends JpaRepository<Customer, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/repositories/CarRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Car;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface CarRepository extends JpaRepository<Car, Integer> {\n    boolean existsByPlate(String name);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/CarRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/CarRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/CarRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/CarRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Car;
+import com.Tobeto.RentaCar.entities.concretes.Car;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface CarRepository extends JpaRepository<Car, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/repositories/EmployeeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Employee;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface EmployeeRepository extends JpaRepository<Employee, Integer> {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/EmployeeRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/EmployeeRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/EmployeeRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/EmployeeRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Employee;
+import com.Tobeto.RentaCar.entities.concretes.Employee;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface EmployeeRepository extends JpaRepository<Employee, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/repositories/ModelRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Model;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ModelRepository extends JpaRepository<Model, Integer> {\n    boolean existsByName (String name);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/ModelRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/ModelRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/ModelRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/ModelRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Model;
+import com.Tobeto.RentaCar.entities.concretes.Model;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 public interface ModelRepository extends JpaRepository<Model, Integer> {
Index: src/main/java/com/Tobeto/RentaCar/repositories/BrandRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Tobeto.RentaCar.repositories;\n\nimport com.Tobeto.RentaCar.entities.Brand;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\n\npublic interface BrandRepository extends JpaRepository<Brand, Integer> {\n    boolean existsByName(String name);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Tobeto/RentaCar/repositories/BrandRepository.java b/src/main/java/com/Tobeto/RentaCar/repositories/BrandRepository.java
--- a/src/main/java/com/Tobeto/RentaCar/repositories/BrandRepository.java	
+++ b/src/main/java/com/Tobeto/RentaCar/repositories/BrandRepository.java	
@@ -1,6 +1,6 @@
 package com.Tobeto.RentaCar.repositories;
 
-import com.Tobeto.RentaCar.entities.Brand;
+import com.Tobeto.RentaCar.entities.concretes.Brand;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 
Index: target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url=jdbc:postgresql://localhost:5433/rentacars\nspring.datasource.username=postgres\nspring.datasource.password=1234\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\nspring.jpa.hibernate.ddl-auto=validate\nspring.jpa.properties.javax.persistence.validation.mode=auto\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/application.properties b/target/classes/application.properties
--- a/target/classes/application.properties	
+++ b/target/classes/application.properties	
@@ -1,7 +1,7 @@
-spring.datasource.url=jdbc:postgresql://localhost:5433/rentacars
+spring.datasource.url=jdbc:postgresql://localhost:5432/rentacars
 spring.datasource.username=postgres
-spring.datasource.password=1234
+spring.datasource.password=12345
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
-spring.jpa.hibernate.ddl-auto=validate
+spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.javax.persistence.validation.mode=auto
 
